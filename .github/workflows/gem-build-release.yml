name: Gem Build and Release
on: push
jobs:
  build-test:
    name: Build + Test 
    runs-on: ubuntu-latest
    env:
      GITHUB_PAT: ${{ secrets.github_token }}

    steps:
    - uses: actions/checkout@v2
    - uses: ruby/setup-ruby@v1 # .ruby-version for ruby setup
      with:
        bundler-cache: true # bundle install and cache
    - name: Test
      run: bundle exec rake

  package:
    name: Package Gem 
    runs-on: ubuntu-latest
    needs: build-test

    steps:
    - uses: actions/checkout@v2
    - uses: ruby/setup-ruby@v1 # .ruby-version for ruby setup
      with:
        bundler-cache: true # bundle install and cache
    - name: Package Gem
      run: bundle exec rake build

  # This is taken from the GH docs and others. Doesn't check if the version is
  # released so re-running will trigger an error when the gem fails to push.
  # TODO: Tagging. gem tag can tag with the version, for now that is enough.
  # Later, main build should tag a commit and the tagging trigger a release workflow.
  # TODO: Bump version (gem bump for now?)
  # https://docs.github.com/en/actions/guides/building-and-testing-ruby
  release:
    name:  Release Gem
    needs: package
    if:    github.ref == 'refs/heads/master'

    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: ruby/setup-ruby@v1 # .ruby-version for ruby setup
      with:
        bundler-cache: true # bundle install and cache
    - name: Publish to GPR
      run: |
        mkdir -p $HOME/.gem
        touch $HOME/.gem/credentials
        chmod 0600 $HOME/.gem/credentials
        printf -- "---\n:github: ${GEM_HOST_API_KEY}\n" > $HOME/.gem/credentials
        gem build *.gemspec
        gem push --KEY github --host https://rubygems.pkg.github.com/${OWNER} *.gem
      env:
        GEM_HOST_API_KEY: "Bearer ${{ secrets.github_token }}"
        OWNER: ${{ github.repository_owner }}
